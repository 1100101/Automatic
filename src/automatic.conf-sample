##############################
## Version-specific options ##
##############################

# Transmission version. Options are "1.2", "1.3", and "external"
transmission-version = "1.3"

# For Transmission 1.2x only: Path to the Transmission configuration files
# transmission-home = "~/.config/transmission"

# Call an external program instead of transmission directly
#
# If you use this, set transmission-version to "external"
# For best results, use an absolute path to the executable
# Executable is passed a single parameter, the name of the .torrent
# file that was downloaded.  The .torrent file passed to this external
# program may be removed after the program returns. 
# The program should return exit code 0 for success and non-0 for failure
# Automatic won't respond to ctrl-C while waiting for this to return
#
# transmission-external = "/usr/local/bin/custom-add-torrent"

# For Transmission 1.3x and newer only: set the host on which Transmission runs (default: localhost)
# rpc-host = "localhost"

# For Transmission 1.3x and newer only: set the RPC port on which Transmission & Clutch communicate (default: 9091)
# rpc-port = 9091

# For Transmission 1.3x and newer only: If you configured Transmission/Clutch to use password authentication, Automatic needs that information as well
# rpc-auth = "user:password"


#####################
## General options ##
#####################


# list of feed URLs. You can specify one or more feeds, in case of the latter use curly brackets (see the "patterns" option for an example)
# Obsolete. Use "feed" option instead.
#url = ""

# A feed contains at least a feed URL and some optional parameters:
#    "cookie"  =>  If the feed sits behind a login-secured site, you may specify the cookie information here so that Automatic
#                   can download the feed (and any torrents that are matched)
#     "id"      =>  Give a feed a numeric ID which can be used to restrict certain filters to only be used with a specific feed.
#
# Sometimes the download URLs in the RSS feed don't point to the correct download location for the torrent.
# Then a URL rewrite is necessary. You can use the following (optional) parameters to do that:
#     "url_pattern" => Pattern of the URL as found in the RSS feed. Use regular expressions and capture groups
#                      to capture parts of the URL that need to be reused.
#     "url_replace" => The 'new' URL that ought to be used as the actual download link for the torrent.
#                      You can insert the captured groups from 'url_pattern' here.
#  Example:
#    "url_pattern"  =>  "http://www.sometorrentsite.com/rssdownload.php/(.+)$"   # This URL has 1 capture group (the part in parentheses)
#    "url_replace"  =>  "http://www.sometorrentsite.com/download.php?/\1"        # Using '\1' in the URL places that part from the above URL
#                                                                                # at the end of the new URL

feed =  {  url          => ""
           cookie       => "" 
           id           => 1
           url_pattern  => ""
           url_replace  => ""
        }


# interval in minutes between checks for new downloads
interval = 30

# Limit upload speed (in KB/s) for each torrent that is added to Transmission via Automatic
#upload-limit = 10

# Automatically add downloaded torrents to Transmission (requires
# transmission-daemon and transmission-remote to be installed or use
# of "external" option)
# If this is not set, all Automatic will do is save the .torrent file.
use-transmission = yes

# Instruct Transmission to immediately start downloading torrents after being added
# If set to 'no' torrents will be added in a paused state
start-torrents = yes

# path where Automatic will store downloaded torrents
torrent-folder = "/tmp"

# path to the file which stores information about already downloaded torrents (so they don't get readded to Transmission)
statefile = "~/.config/automatic.state"

# Prowl API key. You can use this to send push notifications to an iPhone or an iPad. See http://prowl.weks.net for more information
#prowl-apikey = ""

# patterns contains a number of regular expressions which are matched against the RSS feed entries
# please don't use curly brackets within a regular expression, it'll horribly break the configuration parser :)
# letter-casing does not matter
#
# !!! This is obsolete. See the option "filter" below !!!

#patterns =  { "Name.of.Something.I.Want.to.Download.Automatically.*HDTV"
#              "Something.else.to.download.*720p"
#              "(?!.*720p)Some.Video.But.Not.The.HD.Version"
#            }

# A filter contains a regular expression which is matched against the RSS feed entries. Letter-casing does not matter in the regular
# expression. You can list as many filters as you want.
# Optional fields:
#    "folder"  ==> Set a specific download folder for torrents that match this regular expression
#    "feedid"  ==> Use this filter only for RSS items from the feed with the specified feed ID
#
# Please don't use curly brackets within a regular expression, it'll horribly break the configuration parser :)
#
# You can split very long patterns or folders (actually, any sub-option that is a string) over multiple lines, if you end the previous
# line with a '\' or '+':
#
#  filter = { pattern => "This.is.a.really.long.*" +
#                        "regular.expression.spanning" \
#                        "multiple.lines"
#           }
#

filter = { pattern => "Name.of.Something.I.Want.to.Download.Automatically.*HDTV"
           folder  => "/your/download/folder"
           feedid  => 1
         }

filter = { pattern => "(?!.*(720p|1080p))Something.Else.I.Desparately.Need.To.Watch.But.Not.In.HD"
           folder  => "/your/download/folder"
           feedid  => 1
         }
